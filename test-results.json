{"numTotalTestSuites":7,"numPassedTestSuites":7,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":16,"numPassedTests":16,"numFailedTests":0,"numPendingTests":0,"numTodoTests":0,"startTime":1749943725060,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["","Config (unit)"],"fullName":" Config (unit) should load config with required DATABASE_URL","status":"passed","title":"should load config with required DATABASE_URL","duration":1,"failureMessages":[]},{"ancestorTitles":["","Config (unit)"],"fullName":" Config (unit) should throw error when DATABASE_URL is missing","status":"passed","title":"should throw error when DATABASE_URL is missing","duration":1,"failureMessages":[]},{"ancestorTitles":["","Config (unit)"],"fullName":" Config (unit) should use default values for optional environment variables","status":"passed","title":"should use default values for optional environment variables","duration":0,"failureMessages":[]},{"ancestorTitles":["","Config (unit)"],"fullName":" Config (unit) should load optional API keys when provided","status":"passed","title":"should load optional API keys when provided","duration":0,"failureMessages":[]}],"startTime":1749943725190,"endTime":1749943725192,"status":"passed","message":"","name":"/Users/connorsheehan/junction/stock-analysis/tests/unit/config.test.ts"},{"assertionResults":[{"ancestorTitles":["","TypeScript Core Implementation (unit)","Database Models"],"fullName":" TypeScript Core Implementation (unit) Database Models should validate Portfolio schema correctly","status":"passed","title":"should validate Portfolio schema correctly","duration":1,"failureMessages":[]},{"ancestorTitles":["","TypeScript Core Implementation (unit)","Database Models"],"fullName":" TypeScript Core Implementation (unit) Database Models should apply default values for Portfolio","status":"passed","title":"should apply default values for Portfolio","duration":0,"failureMessages":[]},{"ancestorTitles":["","TypeScript Core Implementation (unit)","Database Models"],"fullName":" TypeScript Core Implementation (unit) Database Models should reject invalid Portfolio data","status":"passed","title":"should reject invalid Portfolio data","duration":0,"failureMessages":[]},{"ancestorTitles":["","TypeScript Core Implementation (unit)","Database Models"],"fullName":" TypeScript Core Implementation (unit) Database Models should validate DailyAnalysis schema correctly","status":"passed","title":"should validate DailyAnalysis schema correctly","duration":1,"failureMessages":[]},{"ancestorTitles":["","TypeScript Core Implementation (unit)","Database Models"],"fullName":" TypeScript Core Implementation (unit) Database Models should validate SwarmPortfolioConfig schema correctly","status":"passed","title":"should validate SwarmPortfolioConfig schema correctly","duration":0,"failureMessages":[]},{"ancestorTitles":["","TypeScript Core Implementation (unit)","Database Models"],"fullName":" TypeScript Core Implementation (unit) Database Models should apply default values for SwarmPortfolioConfig","status":"passed","title":"should apply default values for SwarmPortfolioConfig","duration":0,"failureMessages":[]},{"ancestorTitles":["","TypeScript Core Implementation (unit)","Type System Validation"],"fullName":" TypeScript Core Implementation (unit) Type System Validation should enforce strict typing for Portfolio fields","status":"passed","title":"should enforce strict typing for Portfolio fields","duration":0,"failureMessages":[]},{"ancestorTitles":["","TypeScript Core Implementation (unit)","Type System Validation"],"fullName":" TypeScript Core Implementation (unit) Type System Validation should handle complex nested objects in analysis_data","status":"passed","title":"should handle complex nested objects in analysis_data","duration":0,"failureMessages":[]},{"ancestorTitles":["","TypeScript Core Implementation (unit)","Type System Validation"],"fullName":" TypeScript Core Implementation (unit) Type System Validation should validate string length constraints","status":"passed","title":"should validate string length constraints","duration":0,"failureMessages":[]},{"ancestorTitles":["","TypeScript Core Implementation (unit)","Type System Validation"],"fullName":" TypeScript Core Implementation (unit) Type System Validation should validate required vs optional fields","status":"passed","title":"should validate required vs optional fields","duration":1,"failureMessages":[]},{"ancestorTitles":["","TypeScript Core Implementation (unit)","Schema Composition and Reusability"],"fullName":" TypeScript Core Implementation (unit) Schema Composition and Reusability should handle multiple schema validations consistently","status":"passed","title":"should handle multiple schema validations consistently","duration":0,"failureMessages":[]},{"ancestorTitles":["","TypeScript Core Implementation (unit)","Schema Composition and Reusability"],"fullName":" TypeScript Core Implementation (unit) Schema Composition and Reusability should maintain type safety across schema transformations","status":"passed","title":"should maintain type safety across schema transformations","duration":0,"failureMessages":[]}],"startTime":1749943725194,"endTime":1749943725197,"status":"passed","message":"","name":"/Users/connorsheehan/junction/stock-analysis/tests/unit/typescript-core.test.ts"}]}