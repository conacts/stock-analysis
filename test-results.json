{"numTotalTestSuites":5,"numPassedTestSuites":5,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":12,"numPassedTests":12,"numFailedTests":0,"numPendingTests":0,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1749945281764,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["TypeScript Core Implementation (unit)","Database Models"],"fullName":"TypeScript Core Implementation (unit) Database Models should validate Portfolio schema correctly","status":"passed","title":"should validate Portfolio schema correctly","duration":0.97199999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["TypeScript Core Implementation (unit)","Database Models"],"fullName":"TypeScript Core Implementation (unit) Database Models should apply default values for Portfolio","status":"passed","title":"should apply default values for Portfolio","duration":0.21104199999996354,"failureMessages":[],"meta":{}},{"ancestorTitles":["TypeScript Core Implementation (unit)","Database Models"],"fullName":"TypeScript Core Implementation (unit) Database Models should reject invalid Portfolio data","status":"passed","title":"should reject invalid Portfolio data","duration":0.35395799999997735,"failureMessages":[],"meta":{}},{"ancestorTitles":["TypeScript Core Implementation (unit)","Database Models"],"fullName":"TypeScript Core Implementation (unit) Database Models should validate DailyAnalysis schema correctly","status":"passed","title":"should validate DailyAnalysis schema correctly","duration":0.28158399999995254,"failureMessages":[],"meta":{}},{"ancestorTitles":["TypeScript Core Implementation (unit)","Database Models"],"fullName":"TypeScript Core Implementation (unit) Database Models should validate SwarmPortfolioConfig schema correctly","status":"passed","title":"should validate SwarmPortfolioConfig schema correctly","duration":0.18862500000000182,"failureMessages":[],"meta":{}},{"ancestorTitles":["TypeScript Core Implementation (unit)","Database Models"],"fullName":"TypeScript Core Implementation (unit) Database Models should apply default values for SwarmPortfolioConfig","status":"passed","title":"should apply default values for SwarmPortfolioConfig","duration":0.20699999999999363,"failureMessages":[],"meta":{}},{"ancestorTitles":["TypeScript Core Implementation (unit)","Type System Validation"],"fullName":"TypeScript Core Implementation (unit) Type System Validation should enforce strict typing for Portfolio fields","status":"passed","title":"should enforce strict typing for Portfolio fields","duration":0.07791699999995672,"failureMessages":[],"meta":{}},{"ancestorTitles":["TypeScript Core Implementation (unit)","Type System Validation"],"fullName":"TypeScript Core Implementation (unit) Type System Validation should handle complex nested objects in analysis_data","status":"passed","title":"should handle complex nested objects in analysis_data","duration":0.09874999999999545,"failureMessages":[],"meta":{}},{"ancestorTitles":["TypeScript Core Implementation (unit)","Type System Validation"],"fullName":"TypeScript Core Implementation (unit) Type System Validation should validate string length constraints","status":"passed","title":"should validate string length constraints","duration":0.13191699999998718,"failureMessages":[],"meta":{}},{"ancestorTitles":["TypeScript Core Implementation (unit)","Type System Validation"],"fullName":"TypeScript Core Implementation (unit) Type System Validation should validate required vs optional fields","status":"passed","title":"should validate required vs optional fields","duration":0.09679199999999355,"failureMessages":[],"meta":{}},{"ancestorTitles":["TypeScript Core Implementation (unit)","Schema Composition and Reusability"],"fullName":"TypeScript Core Implementation (unit) Schema Composition and Reusability should handle multiple schema validations consistently","status":"passed","title":"should handle multiple schema validations consistently","duration":0.12862499999999955,"failureMessages":[],"meta":{}},{"ancestorTitles":["TypeScript Core Implementation (unit)","Schema Composition and Reusability"],"fullName":"TypeScript Core Implementation (unit) Schema Composition and Reusability should maintain type safety across schema transformations","status":"passed","title":"should maintain type safety across schema transformations","duration":0.075458000000026,"failureMessages":[],"meta":{}}],"startTime":1749945281873,"endTime":1749945281876.1318,"status":"passed","message":"","name":"/Users/connorsheehan/junction/stock-analysis/tests/unit/typescript-core.test.ts"}]}