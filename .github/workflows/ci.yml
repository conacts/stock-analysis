name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Node.js dependencies
        run: npm install

      - name: Lint TypeScript code
        run: npm run lint
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/test_db

      - name: Type check TypeScript
        run: npm run type-check
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/test_db

      - name: Run TypeScript tests
        run: npm run test
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/test_db
          DEEPSEEK_API_KEY: test-key-for-ci
          ALPACA_API_KEY: test-alpaca-key
          ALPACA_SECRET_KEY: test-alpaca-secret

      - name: Build TypeScript project
        run: npm run build
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/test_db

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run security audit
        run: npm audit --audit-level moderate

  deploy-trigger-dev:
    runs-on: ubuntu-latest
    needs: [test]
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Node.js dependencies
        run: npm install

      - name: Login to Trigger.dev
        run: |
          npx trigger.dev@latest login
        env:
          TRIGGER_ACCESS_TOKEN: ${{ secrets.TRIGGER_ACCESS_TOKEN }}

      - name: Verify Authentication
        run: |
          npx trigger.dev@latest whoami

      - name: Deploy to Trigger.dev Development
        run: |
          npx trigger.dev@latest deploy
        env:
          TRIGGER_ACCESS_TOKEN: ${{ secrets.TRIGGER_ACCESS_TOKEN }}
          DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Test Development Deployment
        run: |
          echo "ðŸ§ª Testing development deployment..."
          sleep 10
          echo "âœ… Development deployment completed successfully"

  deploy-trigger-prod:
    runs-on: ubuntu-latest
    needs: [test, security, deploy-trigger-dev]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Node.js dependencies
        run: npm install

      - name: Login to Trigger.dev
        run: |
          npx trigger.dev@latest login
        env:
          TRIGGER_ACCESS_TOKEN: ${{ secrets.TRIGGER_ACCESS_TOKEN }}

      - name: Verify Authentication
        run: |
          npx trigger.dev@latest whoami

      - name: Deploy to Trigger.dev Production
        run: |
          npx trigger.dev@latest deploy
        env:
          TRIGGER_ACCESS_TOKEN: ${{ secrets.TRIGGER_ACCESS_TOKEN }}
          DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Verify Production Deployment
        run: |
          echo "âœ… Production deployment completed successfully"
          npx trigger.dev@latest whoami
