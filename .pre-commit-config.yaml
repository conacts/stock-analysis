# Pre-commit hooks for stock analysis system
repos:
    # Database migration validation
    - repo: local
      hooks:
          - id: database-migration-check
            name: Database Migration Check
            entry: uv run python scripts/migrate.py validate
            language: system
            stages: [pre-commit]
            pass_filenames: false
            description: "Validate database migrations before commit"

    # Git lint check on staged files
    - repo: local
      hooks:
          - id: git-lint-staged
            name: Git Lint Staged Files
            entry: bash -c 'git diff --cached --name-only --diff-filter=ACM | grep -E "\.(py)$" | xargs -r uv run ruff check --fix'
            language: system
            stages: [pre-commit]
            pass_filenames: false
            description: "Run ruff lint on staged Python files"

    # Python code formatting and linting
    - repo: https://github.com/astral-sh/ruff-pre-commit
      rev: v0.8.4
      hooks:
          - id: ruff
            name: Lint with Ruff
            args: [--fix, --line-length=320]
          - id: ruff-format
            name: Format with Ruff
            args: [--line-length=320]

    # General file checks
    - repo: https://github.com/pre-commit/pre-commit-hooks
      rev: v5.0.0
      hooks:
          - id: trailing-whitespace
            name: Remove trailing whitespace
          - id: end-of-file-fixer
            name: Fix end of files
          - id: check-yaml
            name: Check YAML syntax
          - id: check-json
            name: Check JSON syntax
          - id: check-toml
            name: Check TOML syntax
          - id: check-merge-conflict
            name: Check for merge conflicts
          - id: check-added-large-files
            name: Check for large files
            args: ["--maxkb=1000"]
          - id: check-case-conflict
            name: Check for case conflicts

    # Security checks
    - repo: https://github.com/PyCQA/bandit
      rev: 1.7.5
      hooks:
          - id: bandit
            args: [-r, src/]
            exclude: tests/

    # Fast unit tests on commit
    - repo: local
      hooks:
          - id: fast-tests
            name: Fast Unit Tests
            entry: uv run python run_tests.py --fast
            language: system
            pass_filenames: false
            always_run: true

# Pre-commit configuration
ci:
    autofix_commit_msg: |
        [pre-commit.ci] auto fixes from pre-commit hooks

        for more information, see https://pre-commit.ci
    autofix_prs: true
    autoupdate_branch: ""
    autoupdate_commit_msg: "[pre-commit.ci] pre-commit autoupdate"
    autoupdate_schedule: weekly
    skip: []
    submodules: false
